{% comment %}
  Outputs comma seperated sorted sizes

  assign product_sizes = product.variants | map: 'option1'
  capture sizes_string
    render 'sort-sizes', sizes: product_sizes
  endcapture

  assign sizes = sizes_string | strip_newlines | split: ','
{% endcomment %}
{%- liquid
  assign default_sizes = product.variants | map: 'option1'
  assign sizes = sizes | default: default_sizes
  assign sizes_letters_options = 'XXS,XXS-XS,XXS/XS,XS,XS-S,XS/S,S,Small,S/M,S-M,M,Medium,M/L,M-L,L,Large,L/XL,L-XL,XL,XL/XXL,XL-XXL,XXL,XXL/XXXL,XXL-XXXL,XXXL' | downcase | split: ','

  comment
    sort letters (x, s, m, ...)
  endcomment
  assign temp_letter_sizes = ''
  for size_letter in sizes_letters_options
    for size in sizes
      assign lowercase_size = size | downcase
      if lowercase_size == size_letter
        assign temp_letter_sizes = temp_letter_sizes | append: size | append: ','
      endif
    endfor
  endfor

  assign letter_sizes = temp_letter_sizes | split: ',' | compact

  comment
    sort numbers
  endcomment
  assign temp_sizes = ''
  for size in sizes
    comment
      filter our non numberic
    endcomment
    assign is_numeric = true
    assign abs = size | abs
    assign json = size | json
    if abs == 0 and json != '"0"'
      assign is_numeric = false
    endif

    unless letter_sizes contains size or is_numeric == false
      assign size_x4 = size | times: 4 | round
      assign temp_sizes = temp_sizes | append: size_x4 | append: ','
    endunless
  endfor

  assign temp_sizes = temp_sizes | split: ',' | compact | sort
  assign temp_number_sizes = ''

  for size in temp_sizes
    assign original_size = size | append: '.0' | divided_by: 4
    assign decimal = original_size | split: '.' | last
    if decimal == '0'
      assign original_size = original_size | split: '.' | first
    endif
    assign temp_number_sizes = temp_number_sizes | append: original_size | append: ','
  endfor

  assign number_sizes = temp_number_sizes | split: ',' | compact

  comment
    catch other cases
  endcomment
  assign temp_other_sizes = ''
  for size in sizes
    unless number_sizes contains size or letter_sizes contains size
      assign temp_other_sizes = temp_other_sizes | append: size | append: ','
    endunless
  endfor

  assign other_sizes = temp_other_sizes | split: ',' | compact | sort

  if letter_sizes.size > 0
    echo letter_sizes | join: ',' | append: ','
  endif
  if number_sizes.size > 0
    echo number_sizes | join: ',' | append: ','
  endif
  echo other_sizes | join: ','
-%}
